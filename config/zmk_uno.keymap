/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#include "zmk_uno_direct.dtsi"

/ {
    macros {
        ZMK_MACRO(ble_zero,
            wait-ms = <1>;
            tap-ms = <1>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
        )
        ZMK_MACRO(ble_one,
            wait-ms = <1>;
            tap-ms = <1>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
        )

        kp_caps: kp_caps {
            compatible = "zmk,behavior-hold-tap";
            label = "KP_CAPS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            bindings = <&kp>, <&caps_word>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_1 {
            label = "base";
            bindings = <
                &kp A     &kp B     &kp A &kp B
                &kp SPACE &kp DOT   &kp C &kp D

                /* &out OUT_USB &ble_zero &ble_one */
                &none &none &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        layer_2 {
            label = "shift";
            bindings = <
                &kp A            &kp MINUS  &trans &trans
                &kp_caps LSHFT 0 &trans     &trans &trans

                &trans &trans &trans
            >;
        };

        layer_3 {
            label = "lighting";
            bindings = <
                &ext_power EP_TOG &trans    &trans &trans
                &bl BL_TOG        &trans    &trans &trans

                &trans &trans &trans
            >;
        };

        layer_4 {
            label = "system";
            bindings = <
                &ble_zero    &ble_one       &trans &trans
                &out OUT_USB &bt BT_CLR     &trans &trans

                &trans &trans &trans
            >;
        };
    };
};
